
# >>> Символ \ використовується в кінці рядка для вказівки на те, що вираз продовжується на наступному рядку.
# >>> Це дозволяє зробити код більш організованим і легким для читання, особливо коли працюєш із довгими виразами.


# >>> Введення даних та Приведення типів
a = float(input("Введіть сторону квадрата a: "))
P = 4 * a
print(f"Периметр квадрата дорівнює {P}")


# >>> Оператори:
# % - Залишок від ділення
# // - Ділення без остатку
# ** - Піднесення до степеня

seconds_count = 5000 
hours = seconds_count // (60 * 60)
minutes = (seconds_count - hours * 60 * 60) // 60
seconds = seconds_count - hours * 60 * 60 - minutes * 60
print(f"{hours}:{minutes}:{seconds}")


# >>> Рядки
message = "Hello world!"
s1 = 'hello'
s2 = 'world!'
joined_string = f"{s1} {s2}"  # Hello world!
print(f"{s1} {s2}")

# Заокруглення результату ділення до двох знаків після коми
x = 10
y = 3
print("Заокруглення результату ділення ", round(x / y, 5))

# Оператори присвоєння
x = 10  # Оператор присвоєння
x += 5  # Оператор присвоєння зі збільшенням
print("Оператор присвоєння зі збільшенням ", x)
x -= 3  # Оператор присвоєння зі зменшенням
print("Оператор присвоєння зі зменшенням ", x)
x *= 2  # Оператор присвоєння з множенням
print("Оператор присвоєння з множенням ", x)
x /= 4  # Оператор присвоєння з діленням
print("Оператор присвоєння з діленням ", x)
x //= 3  # Оператор присвоєння з цілочисельним діленням
print("Оператор присвоєння з цілочисельним діленням ", x)
x %= 3  # Оператор присвоєння з остачею від ділення
print("Оператор присвоєння з остачею від ділення ", x)
x **= 4  # Оператор присвоєння з піднесенням до степеня
print("Оператор присвоєння з піднесенням до степеня ", x)