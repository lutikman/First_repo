''' 
Зрізи у Python (Slice) — це потужний механізм для доступу до частин послідовностей, таких як рядки, списки та кортежі.
Зрізи визначаються за допомогою квадратних дужок [] із вказівкою індексів початку, кінця та (необов'язково) кроку.
  початок — індекс елемента, з якого починається зріз. Якщо він не вказаний, зріз починається з початку послідовності, з 0.
  кінець — індекс елемента, до якого йде зріз, але увага!, не включаючи його. Якщо він не вказаний, зріз іде до кінця послідовності.
  крок — визначає крок, з яким вибираються елементи. Якщо не вказаний, використовується крок 1.
'''

s = "Hello, World!"
first_five = s[:5]
print(first_five)

# отримаємо непарні числа списку.
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
odd_numbers = numbers[0:10:2]
print(odd_numbers)
# або
odd_numbers = numbers[::2]
print(odd_numbers)

# отримаємо парні числа зі списку за допомогою зрізів
even_numbers = numbers[1:10:2]
print(even_numbers)
# або
even_numbers = numbers[1::2]
print(even_numbers)

# отримаємо числа списку, кратні трьом.
three_numbers = numbers[2:10:3]
print(three_numbers)
# або
three_numbers = numbers[2::3]
print(three_numbers)


# Ми можемо використовувати від'ємні індекси у зрізах.
# Із корисного, використання від'ємного кроку дозволяє "проходити" послідовність у зворотному порядку і фактично заміняє метод reverse для списків.
reverse_numbers = numbers[::-1]
print(reverse_numbers)

# отримаємо парні числа списку в зворотньому напрямку
even_reverse_numbers = numbers[9::-2]
print(even_reverse_numbers)

# отримаємо непарні числа списку в зворотньому напрямку
odd_reverse_numbers = numbers[8::-2]
print(odd_reverse_numbers)

# Щоб зробити копію списку в Python, можна замість методу copy використати зріз з усіма елементами оригінального списку
copy_numbers = numbers[:]
print(copy_numbers)